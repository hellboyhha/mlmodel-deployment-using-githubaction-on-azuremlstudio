name: model_deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "staging" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  python_version: '3.10'
  python_requirements_file: 'requirements.txt'
  # python_model_deployment_script_path: "${{ GITHUB.WORKSPACE }}/model-deployment-azure.py"
  python_model_deployment_script: 'model-deployment-azure.py'
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  CD:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # python installation
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python_version }}

      - name: Python Dependencies Installation
        run: pip install -r ${{ env.python_requirements_file }}
        
      - name: Azure CLI Installation
        run: |
          # Azure CLI installation through a script maintained by the Azure CLI team
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
          # verify installation
          sudo az --version

      - name: Azure CLI Login using service principal
        run: az login --service-principal -u ${{ secrets.AZ_APP_ID }} -p ${{ secrets.AZ_APP_SECRET }} --tenant ${{ secrets.AZ_TENANT_ID }}

      - name: Execute Python Deployment Script after Azure ML Workspace Configuration Setup 
        run: |
          export AZ_SUBSCRIPTION_ID=${{ secrets.AZ_SUBSCRIPTION_ID }} AZ_RESOURCE_GP_NAME=${{ secrets.AZ_RESOURCE_GP_NAME }} AZ_ML_WORKSPACE_NAME=${{ secrets.AZ_ML_WORKSPACE_NAME }}
          python ${{ env.python_model_deployment_script }}

      - name: AZ CLI Logout
        run: az logout
